{
  "_args": [
    [
      {
        "raw": "stifle@^1.0.2",
        "scope": null,
        "escapedName": "stifle",
        "name": "stifle",
        "rawSpec": "^1.0.2",
        "spec": ">=1.0.2 <2.0.0",
        "type": "range"
      },
      "/home/lieroz/BEST-HACK-2018-SAS/node_modules/react-scrollbar-size"
    ]
  ],
  "_from": "stifle@>=1.0.2 <2.0.0",
  "_id": "stifle@1.0.4",
  "_inCache": true,
  "_location": "/stifle",
  "_nodeVersion": "6.9.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/stifle-1.0.4.tgz_1517425935762_0.9460354999173433"
  },
  "_npmUser": {
    "name": "twobitfool",
    "email": "matt@twobitfool.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "stifle@^1.0.2",
    "scope": null,
    "escapedName": "stifle",
    "name": "stifle",
    "rawSpec": "^1.0.2",
    "spec": ">=1.0.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/react-scrollbar-size"
  ],
  "_resolved": "https://registry.npmjs.org/stifle/-/stifle-1.0.4.tgz",
  "_shasum": "8b3bcdf52419b0a9c79e35adadce50123c1d8e99",
  "_shrinkwrap": null,
  "_spec": "stifle@^1.0.2",
  "_where": "/home/lieroz/BEST-HACK-2018-SAS/node_modules/react-scrollbar-size",
  "author": {
    "name": "Matt Smith",
    "email": "matt@twobitfool.com"
  },
  "bugs": {
    "url": "https://github.com/twobitfool/stifle/issues"
  },
  "dependencies": {},
  "description": "A very simple way to throttle a function",
  "devDependencies": {
    "chai": "^3.5.0",
    "mocha": "^3.3.0"
  },
  "directories": {},
  "dist": {
    "shasum": "8b3bcdf52419b0a9c79e35adadce50123c1d8e99",
    "tarball": "https://registry.npmjs.org/stifle/-/stifle-1.0.4.tgz"
  },
  "gitHead": "d5d870e001a11b2516f3163432a74eb2e290b79c",
  "homepage": "https://github.com/twobitfool/stifle#readme",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "twobitfool",
      "email": "matt@twobitfool.com"
    }
  ],
  "name": "stifle",
  "optionalDependencies": {},
  "readme": "stifle\n======\n\nWrap a function, so it is only called (at most) once every X milliseconds.\n\n```javascript\n    var stifle = require('stifle')\n\n    // A silly little clock\n    function tellTime () {\n      console.log('The time is now ' + new Date())\n    }\n\n    // Only show the time once per second\n    var secondHand = stifle(tellTime, 1000)\n\n    // Call it like crazy, but it will only fire once per second\n    var interval = setInterval(secondHand, 10)\n```\n\n## Cancellation\n\nThe wrapped function comes with a `cancel` method to kill any pending future invocations -- useful for shutting it down when a page or component is being unloaded.\n\n\n```javascript\n    // Stop calling the secondHand\n    clearInterval(interval)\n\n    // Cancel pending calls, or else it will fire one more time\n    secondHand.cancel()\n```\n\n## No Extras\n\nTo keep it fast and simple, `stifle` does not support:\n* passing parameters\n* returning values\n* recursive invocation\n* \"flushing\" pending invocations\n* leading/trailing options\n\nIf you want those fancy features, check out [lodash.throttle](https://lodash.com/docs/4.17.4#throttle)\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/twobitfool/stifle.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "1.0.4"
}
