var _templateObject = _taggedTemplateLiteralLoose(['\n  opacity: ', ';\n  transition: all ', 'ms;\n  ', '\n  display: flex;\n  background-color: ', ';\n  position: absolute;\n  border: none;\n  border-radius: 50%;\n  box-shadow: 0 0 4px rgba(0,0,0,.14),0 4px 8px rgba(0,0,0,.28);\n  cursor: pointer;\n  outline: none;\n  ', '\n  padding: 0;\n  -webkit-user-drag: none;\n  font-weight: bold;\n  width: ', 'px;\n  height: ', 'px;\n  justify-content: center;\n  align-items: center;\n  \n  & > a > svg {\n    fill: ', ';\n  }\n'], ['\n  opacity: ', ';\n  transition: all ', 'ms;\n  ', '\n  display: flex;\n  background-color: ', ';\n  position: absolute;\n  border: none;\n  border-radius: 50%;\n  box-shadow: 0 0 4px rgba(0,0,0,.14),0 4px 8px rgba(0,0,0,.28);\n  cursor: pointer;\n  outline: none;\n  ', '\n  padding: 0;\n  -webkit-user-drag: none;\n  font-weight: bold;\n  width: ', 'px;\n  height: ', 'px;\n  justify-content: center;\n  align-items: center;\n  \n  & > a > svg {\n    fill: ', ';\n  }\n']),
    _templateObject2 = _taggedTemplateLiteralLoose(['margin-top: ', 'px'], ['margin-top: ', 'px']),
    _templateObject3 = _taggedTemplateLiteralLoose(['margin-left: ', 'px'], ['margin-left: ', 'px']);

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; }

import React, { Component } from 'react';
import PropTypes from 'prop-types';
import styled, { css } from 'styled-components';

var Wrapper = styled.li(_templateObject, function (props) {
  return props.isOpen ? 1 : 0;
}, function (props) {
  return props.slideSpeed;
}, function (props) {
  switch (props.direction) {
    // TODO: Do not fix the transform value to 60, calculate it based on given buttonSize.
    case 'left':
      return 'transform: translate(' + (props.isOpen ? props.order * 60 * -1 : 0) + 'px, 0px);';
    case 'right':
      return 'transform: translate(' + (props.isOpen ? props.order * 60 : 0) + 'px, 0px);';
    case 'up':
      return 'transform: translate(0px, ' + (props.isOpen ? props.order * 60 * -1 : 0) + 'px);';
    case 'down':
      return 'transform: translate(0px, ' + (props.isOpen ? props.order * 60 * 1 : 0) + 'px);';
    default:
      return 'transform: translate(0px, ' + (props.isOpen ? props.order * 60 * 1 : 0) + 'px);';
  }
}, function (props) {
  return props.backgroundColor;
}, function (props) {
  return props.direction === 'left' || props.direction === 'right' ? css(_templateObject2, (props.size.main - props.size.child) / 2) : css(_templateObject3, (props.size.main - props.size.child) / 2);
}, function (props) {
  return props.size.child;
}, function (props) {
  return props.size.child;
}, function (prop) {
  return prop.iconColor;
});

var ChildButton = function (_Component) {
  _inherits(ChildButton, _Component);

  function ChildButton() {
    _classCallCheck(this, ChildButton);

    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
  }

  ChildButton.prototype.render = function render() {
    var _props = this.props,
        iconButton = _props.iconButton,
        other = _objectWithoutProperties(_props, ['iconButton']);

    var IconButton = iconButton;

    return React.createElement(
      Wrapper,
      other,
      React.createElement(
        'a',
        null,
        React.createElement(IconButton, null)
      )
    );
  };

  return ChildButton;
}(Component);

ChildButton.propTypes = {
  iconButton: PropTypes.func.isRequired,
  iconColor: PropTypes.string,
  isOpen: PropTypes.bool,
  direction: PropTypes.string,
  offset: PropTypes.number,
  size: PropTypes.shape({
    main: PropTypes.number,
    child: PropTypes.number
  })
};
ChildButton.defaultProps = {
  direction: 'down',
  iconColor: 'black',
  offset: 0,
  size: {
    main: 56,
    child: 56
  },
  isOpen: false
};
var _default = ChildButton;


export default _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(Wrapper, 'Wrapper', 'src/ChildButton.js');

  __REACT_HOT_LOADER__.register(ChildButton, 'ChildButton', 'src/ChildButton.js');

  __REACT_HOT_LOADER__.register(_default, 'default', 'src/ChildButton.js');
}();

;